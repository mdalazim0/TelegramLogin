const express = require('express');
const bodyParser = require('body-parser');
const mongoose = require('mongoose');
const TelegramBot = require('node-telegram-bot-api');

const app = express();
app.use(bodyParser.json());
app.use(express.static('public')); // Static files

const botToken = '7489104395:AAG4fcBvkqzi9fN9w_cqBXYaPxTBQ0nt1qI'; // Your Telegram Bot API Token
const bot = new TelegramBot(botToken, { polling: true });

// MongoDB Connection
mongoose.connect('mongodb://localhost:27017/yourdbname', { useNewUrlParser: true, useUnifiedTopology: true });

const userSchema = new mongoose.Schema({
    username: String,
    userId: String,
    balance: Number,
});

const User = mongoose.model('User', userSchema);

// API to get user info
app.get('/get-user-info/:userId', async (req, res) => {
    const user = await User.findOne({ userId: req.params.userId });
    if (user) {
        res.json({ username: user.username, balance: user.balance });
    } else {
        res.status(404).json({ message: 'User not found' });
    }
});

// Telegram bot command to start and register user
bot.onText(/\/start/, async (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    const username = msg.from.username;
    const balance = 100; // Default balance or fetch from another source

    await User.findOneAndUpdate(
        { userId: userId.toString() },
        { username, userId: userId.toString(), balance },
        { upsert: true }
    );

    bot.sendMessage(chatId, `Welcome, ${username}! Your user ID is ${userId} and your balance is $${balance}.`);
});

// Start the server
app.listen(3000, () => {
    console.log('Server is running on port 3000');
});
